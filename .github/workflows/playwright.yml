name: Playwright tests

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

env:
  NEXT_TELEMETRY_DISABLED: 1
  AUTH0_BASE_URL: http://localhost:3000
  AUTH0_CLIENT_ID: ${{ secrets.AUTH0_CLIENT_ID }}
  AUTH0_CLIENT_SECRET: ${{ secrets.AUTH0_CLIENT_SECRET }}
  AUTH0_ISSUER_BASE_URL: ${{ secrets.AUTH0_ISSUER_BASE_URL }}
  AUTH0_SECRET: ${{ secrets.AUTH0_SECRET }}

jobs:
  test:
    timeout-minutes: 60
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 16
      - name: Cache node modules
        uses: actions/cache@v2
        with:
          path: |
            ~/.npm
            ${{ github.workspace }}/.next/cache
          # Generate a new cache whenever packages or source files change.
          key:
            ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}-${{
            hashFiles('**.[jt]s', '**.[jt]sx') }}
          # If source files changed but packages didn't, rebuild from a prior cache.
          restore-keys: |
            ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}-
        run: npm ci
      - name: Install Playwright Browsers
        run: npx playwright install --with-deps
      - name: Build production build
        run: npm run build
      - name: Run your tests
        run: npm run test
      - name: Get current date
        id: date
        run: echo "::set-output name=date::$(date +'%Y-%m-%d')"
      - name: Upload HTML report as Artifact
        uses: actions/upload-artifact@v3
        env:
          TAG_NAME: test-report-${{ steps.date.outputs.date }}
        if: always()
        with:
          name: playwright-report
          path: playwright-report/
          retention-days: 30
